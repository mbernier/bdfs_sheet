;
; Set this for the config you want from below
;
[current]
environment = verbose_debug

;
; This gets pulled first in config.py, then later configs can override these settings
; this is a bit of a hack to set up the params and remove the need for validation, sorry not sorry
;
[DEFAULT]

; Sets the default log level for the logger functionality
log_level = DEBUG

; allows the @debug_log decorator to call logger.debug() with the method's return data
;   the decorator.py code does not respect the configurationg for `debug` when this is called, so they can be
;   used separately
debug_decorator_returns = False

; allows writing validation debug() statements for validation tracing in the log
debug_validations = True

; allows logger.console()
output_to_console = True

;
; Allows all debug messages to be output, warning this is VERY verbose, because it includes 
;   validation debug messages
;
[verbose_debug]
log_level = DEBUG
debug_decorator_returns = True
debug_validations = True


;
; most of the debugging, doesn't include validations and validation decorator debug statements which are 
;       SUPER verbose
;
[development]
log_level = INFO
debug_validations = False

;
;If we put this on a server, we probably don't want to fill the logs with all the verbosity above
;
[production]
log_level = CRITICAL
output_to_console = False